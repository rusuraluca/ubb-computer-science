------------------------------------------------------
Id:
6
Execution Stack:
(ref(int) v; (new(v, 20); (ref(ref(int)) a; (new(a, v); (print(v); print(a))))))

Symbol Table:

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
ref(int) v
(new(v, 20); (ref(ref(int)) a; (new(a, v); (print(v); print(a)))))

Symbol Table:

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
ref(int) v
(new(v, 20); (ref(ref(int)) a; (new(a, v); (print(v); print(a)))))

Symbol Table:

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
ref(int) v
(new(v, 20); (ref(ref(int)) a; (new(a, v); (print(v); print(a)))))

Symbol Table:

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
ref(int) v
(new(v, 20); (ref(ref(int)) a; (new(a, v); (print(v); print(a)))))

Symbol Table:

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(v, 20)
(ref(ref(int)) a; (new(a, v); (print(v); print(a))))

Symbol Table:
v -> ref(0, int)

Output List:

File Table:

Heap:



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:
new(a, v)
(print(v); print(a))

Symbol Table:
a -> ref(0, ref(int))
v -> ref(1, int)

Output List:

File Table:

Heap:
1 -> 20



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



------------------------------------------------------
Id:
6
Execution Stack:

Symbol Table:
a -> ref(2, ref(int))
v -> ref(1, int)

Output List:
ref(1, int)
ref(2, ref(int))

File Table:

Heap:
1 -> 20
2 -> ref(1, int)



